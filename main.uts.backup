import App from './App.uvue'
import { createSSRApp } from 'vue'

// 导入工具模块
import errorHandler from './utils/errorHandler.js'
import performanceMonitor from './utils/performance.js'
import notificationManager from './utils/notification.js'
import cacheManager from './utils/cacheManager.js'
import { ENV_UTILS } from './config/env.js'

export function createApp() {
	const app = createSSRApp(App)
	
	// 安全检查环境配置
	try {
		const config = ENV_UTILS.getConfig()
		// 在开发环境下显示环境信息
		if (config && config.enableDebug) {
			ENV_UTILS.dev.showInfo()
		}
		
		// 配置全局属性
		app.config.globalProperties.$errorHandler = errorHandler
		app.config.globalProperties.$performance = performanceMonitor
		app.config.globalProperties.$notification = notificationManager
		app.config.globalProperties.$cache = cacheManager
		app.config.globalProperties.$env = config
	} catch (error) {
		console.warn('环境配置初始化失败:', error)
		// 提供默认配置
		app.config.globalProperties.$env = { isDev: false, enableDebug: false }
	}
	
	// 设置全局错误处理
	app.config.errorHandler = (err, vm, info) => {
		console.error('Vue错误:', err, info)
		if (errorHandler && errorHandler.handler) {
			errorHandler.handler.handleVueError(err, vm, info)
		}
	}
	
	return {
		app
	}
}